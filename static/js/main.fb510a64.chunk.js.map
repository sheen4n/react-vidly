{"version":3,"sources":["context/createDataContext.js","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","seedData/seedMovies.js","context/MoviesContext.js","context/AuthContext.js","services/authService.js","components/common/protectedRoute.js","components/navBar.js","components/common/searchBox.js","components/common/pagination.js","components/common/listGroup.js","components/common/like.js","components/common/tableHeader.js","components/common/tableBody.js","components/common/table.js","components/moviesTable.js","components/movies.js","utils/paginate.js","components/rentals.js","components/customers.js","components/common/input.js","components/common/select.js","components/common/form.js","components/movieForm.js","components/loginForm.js","components/registerForm.js","services/userService.js","components/notFound.js","components/logout.js","components/profile.js","App.js","serviceWorker.js","index.js"],"names":["reducer","actions","initialState","localStorageName","Context","React","createContext","Provider","children","useReducer","state","dispatch","useEffect","localStorage","setItem","JSON","stringify","boundedActions","Object","keys","reduce","result","key","value","init","Sentry","dsn","log","error","console","setHttpJwt","jwt","axios","defaults","headers","common","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","movieUrl","id","deleteMovie","movieId","http","getMovie","saveMovie","movie","_id","body","getGenres","data","name","movies","title","numberInStock","dailyRentalRate","allMovies","genres","selectedGenre","currentPage","sortColumn","path","order","query","createDataContext","action","type","payload","filter","m","map","liked","loadData","a","removeMovie","toggleMovieLike","selectPage","page","selectGenre","genre","updateSortColumn","updateQuery","setAllMovies","reset","all","g","seedData","genreData","genreId","removeMovieFromUi","parse","window","getItem","loginUser","credentials","email","password","user","jwtDecode","Error","logout","savedData","loadStorage","ProtectedRoute","Component","component","render","rest","authState","useContext","AuthContext","props","to","pathname","from","location","NavBar","className","data-toggle","data-target","aria-controls","aria-expanded","aria-label","SearchBox","onSearch","onChange","e","currentTarget","placeholder","Pagination","itemsCount","pageSize","onPageChange","numOfPages","Math","ceil","isMultiPages","pages","_","range","isFirstPage","isLastPage","onClick","ListGroup","items","selectedItem","onItemSelect","valueProperty","textProperty","item","style","cursor","Like","fontSize","TableHeader","columns","onSort","renderHeaderCell","column","raiseSort","label","renderSortIcon","TableBody","createKey","content","renderCell","Table","MoviesTable","onLike","onDelete","admin_columns","isAdmin","Movies","history","useState","isLoading","setIsLoading","MoviesContext","loadDataFunc","useRef","current","count","handleDelete","moviesClone","cloneDeep","resetData","filtered","toLowerCase","includes","slice","paginate","orderBy","totalCount","length","getPagedData","marginBottom","disabled","Rentals","Customers","Input","autoFocus","htmlFor","Select","dataSet","option","Form","schema","submitAction","inputList","setData","setErrors","errors","buttonLabel","handleChange","errObj","errorMessage","validateProperty","Joi","object","validate","details","message","validateAll","abortEarly","renderInput","onSubmit","preventDefault","input","string","required","number","integer","min","max","MovieForm","match","params","setMovie","setGenres","mapToViewModel","genresData","movieFromDb","replace","loadGenres","loadMovie","push","minDomainSegments","tlds","allow","LoginForm","setCredentials","RegisterForm","newUser","setNewUser","setJwt","NotFound","Logout","logoutFunc","Profile","App","role","hello","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fb510a64.chunk.js","sourcesContent":["import React, { useReducer, useEffect } from 'react';\n\nexport default (reducer, actions, initialState, localStorageName = '') => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n      if (localStorageName) localStorage.setItem(localStorageName, JSON.stringify(state));\n    }, [state]);\n\n    const boundedActions = Object.keys(actions).reduce((result, key) => {\n      return { ...result, [key]: actions[key](dispatch) };\n    }, {});\n\n    return <Context.Provider value={{ state, ...boundedActions }}>{children}</Context.Provider>;\n  };\n\n  return { Context, Provider };\n};\n","import * as Sentry from '@sentry/browser';\n\nfunction init() {\n  Sentry.init({ dsn: 'https://d0ceff7dfcd24286a59cda79d91f4752@sentry.io/5186000' });\n}\n\nfunction log(error) {\n  Sentry.captureException(error);\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from 'axios';\nimport logger from './logService';\nimport { toast } from 'react-toastify';\nimport config from '../config.json';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || config.apiEndPoint;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error('An unexpected error occurrred.');\n  }\n\n  return Promise.reject(error);\n});\n\nexport function setHttpJwt(jwt) {\n  axios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};\n","import http from './httpService';\n\nconst apiEndpoint = '/movies';\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function deleteMovie(movieId) {\n  return http.delete(movieUrl(movieId));\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n  console.log(movie);\n  return http.post(apiEndpoint, movie);\n}\n","import http from './httpService';\n\nconst apiEndpoint = '/genres';\n\nexport function getGenres() {\n  return http.get(apiEndpoint);\n}\n","const data = [\n  {\n    name: 'Comedy',\n    movies: [\n      { title: 'Airplane', numberInStock: 5, dailyRentalRate: 2 },\n      { title: 'The Hangover', numberInStock: 10, dailyRentalRate: 2 },\n      { title: 'Wedding Crashers', numberInStock: 15, dailyRentalRate: 2 }\n    ]\n  },\n  {\n    name: 'Action',\n    movies: [\n      { title: 'Die Hard', numberInStock: 5, dailyRentalRate: 2 },\n      { title: 'Terminator', numberInStock: 10, dailyRentalRate: 2 },\n      { title: 'The Avengers', numberInStock: 15, dailyRentalRate: 2 }\n    ]\n  },\n  {\n    name: 'Romance',\n    movies: [\n      { title: 'The Notebook', numberInStock: 5, dailyRentalRate: 2 },\n      { title: 'When Harry Met Sally', numberInStock: 10, dailyRentalRate: 2 },\n      { title: 'Pretty Woman', numberInStock: 15, dailyRentalRate: 2 }\n    ]\n  },\n  {\n    name: 'Thriller',\n    movies: [\n      { title: 'The Sixth Sense', numberInStock: 5, dailyRentalRate: 2 },\n      { title: 'Gone Girl', numberInStock: 10, dailyRentalRate: 2 },\n      { title: 'The Others', numberInStock: 15, dailyRentalRate: 2 }\n    ]\n  }\n];\n\nexport default data;\n","import createDataContext from './createDataContext';\nimport { toast } from 'react-toastify';\nimport { getMovies, deleteMovie, saveMovie } from '../services/movieService';\nimport { getGenres } from '../services/genreService';\n\nimport seedData from '../seedData/seedMovies';\n\nconst initialState = {\n  allMovies: [],\n  genres: [{ _id: '', name: 'All Genres' }],\n  selectedGenre: null,\n  currentPage: 1,\n  sortColumn: { path: 'title', order: 'asc' },\n  query: '',\n};\n\nconst moviesReducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'load_data':\n      return {\n        ...initialState,\n        genres: [...initialState.genres, ...payload.genres],\n        allMovies: payload.allMovies,\n        selectedGenre: initialState.genres[0],\n      };\n    case 'remove_movie':\n      return { ...state, allMovies: state.allMovies.filter((m) => m._id !== payload._id) };\n\n    case 'toggle_movie_like':\n      return {\n        ...state,\n        allMovies: state.allMovies.map((m) => (m._id === payload._id ? { ...m, liked: !m.liked } : m)),\n      };\n\n    case 'select_page':\n      return { ...state, currentPage: payload };\n\n    case 'select_genre':\n      return { ...state, selectedGenre: payload, currentPage: 1, query: '' };\n\n    case 'update_sort_column':\n      return { ...state, sortColumn: payload };\n\n    case 'set_all_movies':\n      return { ...state, allMovies: payload };\n\n    case 'update_query':\n      return { ...state, query: payload, selectedGenre: initialState.genres[0], currentPage: 1 };\n    default:\n      return state;\n  }\n};\n\nconst loadData = (dispatch) => async () => {\n  const { data: genres } = await getGenres();\n  const { data: allMovies } = await getMovies();\n  dispatch({ type: 'load_data', payload: { allMovies, genres } });\n};\n\nconst removeMovie = (dispatch) => async (movie) => {\n  try {\n    await deleteMovie(movie._id);\n  } catch (ex) {\n    if (ex.response && ex.response.status === 404) toast.error('This movie has already been deleted.');\n  }\n};\n\nconst removeMovieFromUi = (dispatch) => (movie) => dispatch({ type: 'remove_movie', payload: movie });\n\nconst toggleMovieLike = (dispatch) => (movie) => dispatch({ type: 'toggle_movie_like', payload: movie });\n\nconst selectPage = (dispatch) => (page) => dispatch({ type: 'select_page', payload: page });\n\nconst selectGenre = (dispatch) => (genre) => dispatch({ type: 'select_genre', payload: genre });\n\nconst updateSortColumn = (dispatch) => (sortColumn) => dispatch({ type: 'update_sort_column', payload: sortColumn });\n\nconst updateQuery = (dispatch) => (query) => dispatch({ type: 'update_query', payload: query });\n\nconst setAllMovies = (dispatch) => (allMovies) => dispatch({ type: 'set_all_movies', payload: allMovies });\n\nconst loadStorage = () => {\n  const savedData = JSON.parse(window.localStorage.getItem('movies'));\n  return savedData || initialState;\n};\n\nconst reset = (dispatch) => async (allMovies, genres) => {\n  await Promise.all(allMovies.map((m) => deleteMovie(m._id)));\n  genres.map((g) =>\n    seedData.map(async (genreData) =>\n      genreData.name === g.name ? await Promise.all(genreData.movies.map((m) => saveMovie({ ...m, genreId: g._id }))) : null\n    )\n  );\n};\n\nexport const { Context, Provider } = createDataContext(\n  moviesReducer,\n  {\n    loadData,\n    removeMovie,\n    toggleMovieLike,\n    selectPage,\n    selectGenre,\n    updateSortColumn,\n    updateQuery,\n    setAllMovies,\n    reset,\n    removeMovieFromUi,\n  },\n  loadStorage(),\n  'movies'\n);\n","import createDataContext from './createDataContext';\nimport jwtDecode from 'jwt-decode';\nimport { login } from '../services/authService';\nimport { setHttpJwt } from '../services/httpService';\n\nconst initialState = { jwt: '' };\n\nconst authReducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'set_jwt':\n      return payload;\n    case 'logout':\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nconst loginUser = (dispatch) => async (credentials) => {\n  try {\n    const { data: jwt } = await login(credentials.email, credentials.password);\n    setHttpJwt(jwt);\n    dispatch({ type: 'set_jwt', payload: { jwt, user: jwtDecode(jwt) } });\n  } catch (ex) {\n    if (ex.response && ex.response.status === 400) {\n      console.log(ex.response.status);\n      throw new Error(ex.response.data);\n    }\n  }\n};\n\nconst logout = (dispatch) => () => {\n  setHttpJwt('');\n  dispatch({ type: 'logout' });\n};\n\nconst loadStorage = () => {\n  const savedData = JSON.parse(window.localStorage.getItem('token'));\n  savedData && setHttpJwt(savedData.jwt);\n  return savedData || initialState;\n};\n\nexport const { Context, Provider } = createDataContext(\n  authReducer,\n  {\n    loginUser,\n    logout,\n  },\n  loadStorage(),\n  'token'\n);\n","import http from './httpService';\n\nconst apiEndpoint = '/auth';\n\nexport function login(email, password) {\n  return http.post(apiEndpoint, { email, password });\n}\n","import React, { useContext } from 'react';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\n  const { state: authState } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!authState.user)\n          return (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: props.location }\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { useContext } from 'react';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst NavBar = () => {\n  const { state: authState } = useContext(AuthContext);\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link to=\"/\" className=\"navbar-brand\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <div className=\"navbar-nav\">\n          <NavLink to=\"/movies\" className=\"nav-link\">\n            Movies\n          </NavLink>\n          <NavLink to=\"/customers\" className=\"nav-link\">\n            Customers\n          </NavLink>\n          <NavLink to=\"/rentals\" className=\"nav-link\">\n            Rentals\n          </NavLink>\n          {!authState.user && (\n            <>\n              <NavLink to=\"/login\" className=\"nav-link\">\n                Login\n              </NavLink>\n              <NavLink to=\"/register\" className=\"nav-link\">\n                Register\n              </NavLink>\n            </>\n          )}\n          {authState.user && (\n            <>\n              <NavLink to=\"/profile\" className=\"nav-link\">\n                {authState.user.name}\n              </NavLink>\n              <NavLink to=\"/logout\" className=\"nav-link\">\n                Logout\n              </NavLink>\n            </>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst SearchBox = ({ query, onSearch }) => {\n  return <input type='text' className='form-control my-3' value={query} onChange={e => onSearch(e.currentTarget.value)} placeholder='Search...' />;\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport _ from 'lodash';\n\nconst Pagination = ({ currentPage, itemsCount, pageSize, onPageChange }) => {\n  const numOfPages = Math.ceil(itemsCount / pageSize);\n\n  const isMultiPages = numOfPages > 1;\n\n  const pages = _.range(1, numOfPages + 1);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === numOfPages;\n\n  if (!isMultiPages) return null;\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination\">\n        {isMultiPages && (\n          <li className={`page-item ${isFirstPage && 'disabled'}`}>\n            <span className=\"page-link\" onClick={() => onPageChange(1)}>\n              First\n            </span>\n          </li>\n        )}\n\n        {pages.map(page => (\n          <li key={page} className={`page-item  ${page === currentPage && 'active'}`}>\n            <span className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </span>\n          </li>\n        ))}\n\n        {isMultiPages && (\n          <li className={`page-item ${isLastPage && 'disabled'}`}>\n            <span className=\"page-link\" onClick={() => onPageChange(numOfPages)}>\n              Last\n            </span>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\n\nconst ListGroup = ({\n  items,\n  selectedItem,\n  onItemSelect,\n  valueProperty = '_id',\n  textProperty = 'name'\n}) => {\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li\n          key={item[valueProperty]}\n          className={`list-group-item ${item === selectedItem && 'active'}`}\n          style={{ cursor: 'pointer' }}\n          onClick={() => onItemSelect(item)}\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ListGroup;\n","import React from 'react';\n\nconst Like = ({ liked, onClick }) => {\n  return (\n    <i\n      onClick={onClick}\n      className={`fa ${liked ? 'fa-heart' : 'fa-heart-o'}`}\n      style={{ fontSize: 24, cursor: 'pointer' }}\n    ></i>\n  );\n};\n\nexport default Like;\n","import React from 'react';\n\nconst TableHeader = ({ columns, sortColumn, onSort }) => {\n  const raiseSort = path => {\n    const order = path === sortColumn.path && sortColumn.order === 'asc' ? 'desc' : 'asc';\n    onSort({ path, order });\n  };\n\n  const renderSortIcon = column => {\n    const { path, order } = sortColumn;\n    if (column.path !== path) return null;\n    return <i className={`fa fa-sort-${order}`}></i>;\n  };\n\n  const renderHeaderCell = column => {\n    if (column.path)\n      return (\n        <th key={column.path} onClick={() => raiseSort(column.path)} className={'clickable'}>\n          {column.label}\n          {renderSortIcon(column)}\n        </th>\n      );\n    return <th key={column.key}></th>;\n  };\n\n  return (\n    <thead>\n      <tr>{columns.map(column => renderHeaderCell(column))}</tr>\n    </thead>\n  );\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport _ from 'lodash';\n\nconst TableBody = ({ data, columns }) => {\n  const renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n\n  const createKey = (item, column) => item._id + (column.path || column.key);\n\n  return (\n    <tbody>\n      {data.map(item => (\n        <tr key={item._id}>\n          {columns.map(column => (\n            <td key={createKey(item, column)}>{renderCell(item, column)}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n};\n\nexport default TableBody;\n","import React from 'react';\nimport TableHeader from './tableHeader';\nimport TableBody from './tableBody';\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody data={data} columns={columns} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport Like from './common/like';\nimport Table from './common/table';\n\nconst MoviesTable = ({ movies, onLike, onDelete, onSort, sortColumn }) => {\n  let columns = [\n    {\n      path: 'title',\n      label: 'Title',\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n    },\n    { path: 'genre.name', label: 'Genre' },\n    { path: 'numberInStock', label: 'Stock' },\n    { path: 'dailyRentalRate', label: 'Rate' },\n    {\n      key: 'like',\n      content: movie => <Like liked={movie.liked} onClick={() => onLike(movie)} />\n    }\n  ];\n\n  const admin_columns = [\n    {\n      key: 'delete',\n      content: movie => (\n        <button onClick={() => onDelete(movie)} className=\"btn btn-danger btn-sm\">\n          Delete\n        </button>\n      )\n    }\n  ];\n\n  const { state: authState } = useContext(AuthContext);\n\n  if (authState.user && authState.user.isAdmin) columns = [...columns, ...admin_columns];\n\n  return <Table data={movies} onSort={onSort} sortColumn={sortColumn} columns={columns} />;\n};\n\nexport default MoviesTable;\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport _ from 'lodash';\n\nimport { paginate } from '../utils/paginate';\n\nimport { Context as MoviesContext } from '../context/MoviesContext';\nimport { Context as AuthContext } from '../context/AuthContext';\n\nimport SearchBox from './common/searchBox';\nimport Pagination from './common/pagination';\nimport ListGroup from './common/listGroup';\nimport MoviesTable from './moviesTable';\n\nconst Movies = ({ history }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const MAX_PAGE_SIZE = 4;\n\n  const {\n    loadData,\n    removeMovie,\n    toggleMovieLike,\n    selectPage,\n    selectGenre,\n    updateSortColumn,\n    updateQuery,\n    setAllMovies,\n    reset,\n    removeMovieFromUi,\n    state,\n  } = useContext(MoviesContext);\n\n  const { state: authState } = useContext(AuthContext);\n\n  const loadDataFunc = useRef(loadData);\n\n  useEffect(() => {\n    loadDataFunc.current();\n  }, []);\n\n  const { allMovies, genres, selectedGenre, currentPage, sortColumn, query } = state;\n\n  if (allMovies.count === 0) return <p> There are no movies in the database.</p>;\n\n  const handleDelete = async (movie) => {\n    const moviesClone = _.cloneDeep(state.allMovies);\n    try {\n      // optimistic delete\n      removeMovieFromUi(movie);\n      await removeMovie(movie);\n    } catch (error) {\n      setAllMovies(moviesClone);\n    }\n  };\n\n  const handleLike = (movie) => {\n    toggleMovieLike(movie);\n  };\n\n  const handlePageChange = (page) => selectPage(page);\n\n  const handleGenreSelect = (genre) => selectGenre(genre);\n\n  const handleSort = (sortColumn) => updateSortColumn(sortColumn);\n\n  const handleSearch = (query) => updateQuery(query);\n\n  const resetData = async () => {\n    setIsLoading(true);\n    await reset(allMovies, genres);\n    await loadDataFunc.current();\n    setIsLoading(false);\n    // history.push('/');\n  };\n\n  const getPagedData = () => {\n    let filtered;\n    if (query) {\n      filtered = allMovies.filter((m) => m.title.toLowerCase().includes(query) || m.genre.name.toLowerCase().includes(query));\n    } else {\n      filtered = selectedGenre && selectedGenre._id ? allMovies.filter((m) => m.genre._id === selectedGenre._id) : allMovies;\n    }\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, MAX_PAGE_SIZE);\n\n    return { totalCount: filtered.length, movies };\n  };\n\n  const { totalCount, movies } = getPagedData();\n\n  if (isLoading) return <h1>Reset Is Loading... Please wait!</h1>;\n\n  return (\n    <div className='row'>\n      <div className='col-3'>\n        <ListGroup items={genres} selectedItem={selectedGenre} onItemSelect={handleGenreSelect} />\n      </div>\n      <div className='col'>\n        {authState.user ? (\n          <>\n            <Link to='/movies/new' className='btn btn-primary' style={{ marginBottom: 20 }}>\n              New Movie\n            </Link>\n            <button onClick={resetData} className='btn btn-success ml-3' style={{ marginBottom: 20 }}>\n              Reset Data\n            </button>\n          </>\n        ) : (\n          <button className='btn btn-success ml-3' style={{ marginBottom: 20 }} disabled='disabled'>\n            Login to Reset Data\n          </button>\n        )}\n\n        <p>Displaying {totalCount} movies in the database...</p>\n        <SearchBox query={query} onSearch={handleSearch} />\n        <MoviesTable movies={movies} onLike={handleLike} onDelete={handleDelete} sortColumn={sortColumn} onSort={handleSort} />\n        <Pagination currentPage={currentPage} itemsCount={totalCount} pageSize={MAX_PAGE_SIZE} onPageChange={handlePageChange} />\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","export const paginate = (data, currentPage, pageSize) =>\n  data.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n","import React from 'react';\n\nconst Rentals = () => {\n  return (\n    <div>\n      <h1>Rentals</h1>\n      <p>Demo Content to display Routing</p>\n    </div>\n  );\n};\n\nexport default Rentals;\n","import React from 'react';\n\nconst Customers = () => {\n  return (\n    <div>\n      <h1>Customers</h1>\n      <p>Demo Content to display Routing</p>\n    </div>\n  );\n};\n\nexport default Customers;\n","import React from 'react';\n\nconst Input = ({  autoFocus = false, type=\"text\", name , label, error, ...rest}) => {\n  return (\n    <div className='form-group'>\n      <label htmlFor={name}>{label}</label>\n      <input\n        name={name}\n        {...rest}\n        type={type}\n        autoFocus={autoFocus}\n        id={name}\n        className='form-control'\n      />\n      {error && <div className='alert alert-danger'>{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nconst Select = ({ name, value, dataSet, onChange }) => {\n  return (\n    <div className='form-group'>\n      <label htmlFor={name}>Example select</label>\n      <select className='form-control' id={{ name }} name={name} value={value} onChange={onChange}>\n        <option value=''>Please Select</option>\n        {dataSet.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","import React from 'react';\nimport Joi from '@hapi/joi';\nimport Input from './input';\nimport Select from './select';\n\nconst Form = ({ schema, submitAction, inputList, data, setData, setErrors, errors, buttonLabel }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errObj = validateAll();\n    if (errObj) return setErrors(errObj);\n    setErrors({});\n    submitAction();\n  };\n\n  const handleChange = ({ currentTarget: { name, value } }) => {\n    const errObj = { ...errors };\n    const errorMessage = validateProperty({ name, value });\n    if (errorMessage) errObj[name] = errorMessage;\n    else delete errObj[name];\n\n    setData({ ...data, [name]: value });\n    setErrors(errObj);\n  };\n\n  const validateProperty = ({ name, value }) => {\n    const { error } = Joi.object({ [name]: schema[name] }).validate({ [name]: value });\n    return error ? error.details[0].message : null;\n  };\n\n  const validateAll = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.object(schema).validate(data, options);\n    if (!error) return null;\n\n    let errObj = {};\n    error.details.map(item => (errObj[item.path[0]] = item.message));\n    return errObj;\n  };\n\n  const renderInput = ({ name, label, type = 'text', autoFocus, dataSet }) => {\n    switch (type) {\n      case 'number':\n      case 'password':\n      case 'text':\n        return (\n          <Input\n            key={name}\n            name={name}\n            label={label}\n            value={data[name]}\n            type={type}\n            onChange={handleChange}\n            error={errors[name]}\n            autoFocus={autoFocus}\n          />\n        );\n      case 'select':\n        return (\n          <Select\n            name={name}\n            value={data[name]}\n            key={name}\n            dataSet={dataSet}\n            onChange={handleChange}\n            error={errors[name]}\n          />\n        );\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {inputList.map(input => renderInput(input))}\n      <button className=\"btn btn-primary\" disabled={validateAll()}>\n        {buttonLabel}\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useState, useEffect } from 'react';\nimport Joi from '@hapi/joi';\nimport { getMovie, saveMovie } from '../services/movieService';\nimport { getGenres } from '../services/genreService';\n\nimport Form from './common/form';\n\nconst schema = {\n  _id: Joi.string(),\n  title: Joi.string()\n    .required()\n    .label('Title'),\n  genreId: Joi.string()\n    .required()\n    .label('Genre'),\n  numberInStock: Joi.number()\n    .integer()\n    .required()\n    .min(0)\n    .max(100)\n    .label('Number In Stock'),\n  dailyRentalRate: Joi.number()\n    .required()\n    .min(0)\n    .max(100)\n    .label('Daily Dental Rate')\n};\n\nconst MovieForm = ({ match, history }) => {\n  const { movieId } = match.params;\n\n  const [movie, setMovie] = useState({\n    title: '',\n    genreId: '',\n    numberInStock: '',\n    dailyRentalRate: ''\n  });\n\n  const [genres, setGenres] = useState([]);\n\n  const [errors, setErrors] = useState({});\n\n  const mapToViewModel = movie => ({\n    _id: movie._id,\n    title: movie.title,\n    genreId: movie.genre._id,\n    numberInStock: movie.numberInStock,\n    dailyRentalRate: movie.dailyRentalRate\n  });\n\n  useEffect(() => {\n    async function loadGenres() {\n      const { data: genresData } = await getGenres();\n      setGenres(genresData);\n    }\n    async function loadMovie() {\n      try {\n        if (movieId === 'new') return;\n        const { data: movieFromDb } = await getMovie(movieId);\n        setMovie(mapToViewModel(movieFromDb));\n      } catch (ex) {\n        if (ex.response && ex.response.status === 404) return history.replace('/not-found');\n      }\n    }\n\n    loadGenres();\n    loadMovie();\n  }, [movieId, history]);\n\n  const submitAction = () => {\n    saveMovie(movie);\n    history.push('/movies');\n  };\n\n  const inputList = [\n    { name: 'title', label: 'Title', autoFocus: true },\n    { name: 'genreId', label: 'Genre', type: 'select', dataSet: genres },\n    { name: 'numberInStock', label: 'Number In Stock', type: 'number' },\n    { name: 'dailyRentalRate', label: 'Daily Rental Rate', type: 'number' }\n  ];\n\n  return (\n    <div>\n      <h1>Movie Form</h1>\n      <Form\n        inputList={inputList}\n        schema={schema}\n        submitAction={submitAction}\n        data={movie}\n        setData={setMovie}\n        errors={errors}\n        setErrors={setErrors}\n        buttonLabel=\"Save\"\n      />\n    </div>\n  );\n};\n\nexport default MovieForm;\n","import React, { useState, useContext } from 'react';\nimport Joi from '@hapi/joi';\n\nimport { Context as AuthContext } from '../context/AuthContext';\nimport Form from './common/form';\nimport { Redirect } from 'react-router-dom';\n\nconst schema = {\n  email: Joi.string()\n    .required()\n    .email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } })\n    .label('Email'),\n  password: Joi.string().min(5).required().label('Password'),\n};\n\nconst LoginForm = ({ history, location }) => {\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState({});\n\n  const { loginUser, state: authState } = useContext(AuthContext);\n\n  const submitAction = async () => {\n    try {\n      await loginUser(credentials);\n      // Redirect Back if State Exist in Location\n      location.state ? history.push(location.state.from.pathname) : history.push('/');\n    } catch (ex) {\n      setErrors({ email: ex.message });\n    }\n  };\n\n  const inputList = [\n    { name: 'email', label: 'Email', autoFocus: true },\n    { name: 'password', label: 'Password', type: 'password' },\n  ];\n\n  if (authState.user) return <Redirect to='/' />;\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <Form\n        inputList={inputList}\n        schema={schema}\n        submitAction={submitAction}\n        data={credentials}\n        setData={setCredentials}\n        errors={errors}\n        setErrors={setErrors}\n        buttonLabel='Login'\n      />\n      <hr />\n      <p>Demo mode</p>\n      <p>Admin Account: admin@admin.com</p>\n      <p>Admin Password: 123456</p>\n      <hr />\n      <p>Normal Account: user@user.com</p>\n      <p>Normal Password: 123456</p>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState, useContext } from 'react';\nimport Joi from '@hapi/joi';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport { register } from '../services/userService';\nimport Form from './common/form';\n\nconst schema = {\n  email: Joi.string()\n    .required()\n    .email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } })\n    .label('Email'),\n  password: Joi.string()\n    .required()\n    .min(5)\n    .label('Password'),\n  name: Joi.string()\n    .required()\n    .label('Name')\n};\n\nconst RegisterForm = ({ history }) => {\n  const [newUser, setNewUser] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const { setJwt } = useContext(AuthContext);\n\n  const submitAction = async () => {\n    try {\n      const response = await register(newUser);\n      console.log(response);\n      setJwt(response.headers['x-auth-token']);\n      history.push('/');\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        setErrors({ email: ex.response.data });\n      }\n    }\n  };\n\n  const inputList = [\n    { name: 'email', label: 'Email', autoFocus: true },\n    { name: 'password', label: 'Password', type: 'password' },\n    { name: 'name', label: 'Name' }\n  ];\n\n  return (\n    <div>\n      <h1>Register</h1>\n      <Form\n        inputList={inputList}\n        schema={schema}\n        submitAction={submitAction}\n        data={newUser}\n        setData={setNewUser}\n        errors={errors}\n        setErrors={setErrors}\n        buttonLabel=\"Register\"\n      />\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import http from './httpService';\n\nconst apiEndpoint = '/users';\n\nexport function register(user) {\n  return http.post(apiEndpoint, user);\n}\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>Not Found</h1>\n      <p>Oopppppsss this page doesn't exist!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { useContext, useEffect, useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Context as AuthContext } from '../context/AuthContext';\n\nconst Logout = () => {\n  const { logout } = useContext(AuthContext);\n\n  const logoutFunc = useRef(logout);\n\n  useEffect(() => {\n    logoutFunc.current();\n  }, []);\n\n  return <Redirect to=\"/\" />;\n};\n\nexport default Logout;\n","import React from 'react';\n\nconst Profile = () => {\n  return (\n    <div>\n      <h1>Profile Page</h1>\n      <p>Sample Profile Page</p>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport { Provider as MoviesProvider } from './context/MoviesContext';\nimport { Provider as AuthProvider } from './context/AuthContext';\n\nimport ProtectedRoute from './components/common/protectedRoute';\n\nimport NavBar from './components/navBar';\nimport Movies from './components/movies';\nimport Rentals from './components/rentals';\nimport Customers from './components/customers';\nimport MovieForm from './components/movieForm';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport NotFound from './components/notFound';\nimport Logout from './components/logout';\nimport Profile from './components/profile';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <MoviesProvider>\n        <ToastContainer />\n        <NavBar />\n\n        <main role=\"main\" className=\"container\">\n          <Switch>\n            <ProtectedRoute path=\"/movies/:movieId\" render={(props) => <MovieForm {...props} hello=\"hello\" />} />\n            <Route path=\"/movies\" render={(props) => <Movies {...props} />} />\n            <Route path=\"/login\" render={(props) => <LoginForm {...props} />} />\n            <Route path=\"/register\" render={(props) => <RegisterForm {...props} />} />\n            <Route path=\"/rentals\" render={() => <Rentals />} />\n            <Route path=\"/customers\" render={() => <Customers />} />\n            <Route path=\"/profile\" render={() => <Profile />} />\n            <Route path=\"/logout\" render={() => <Logout />} />\n            <Route path=\"/not-found\" render={NotFound} />\n            <Redirect exact from=\"/react-vidly\" to=\"/movies\" />\n            <Redirect exact from=\"/\" to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </MoviesProvider>\n    </AuthProvider>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport logger from './services/logService';\n\nlogger.init();\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}