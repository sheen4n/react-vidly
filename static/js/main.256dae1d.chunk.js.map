{"version":3,"sources":["context/createDataContext.js","context/MoviesContext.js","services/logService.js","services/httpService.js","context/AuthContext.js","components/common/protectedRoute.js","components/navBar.js","services/genreService.js","services/movieService.js","seedData/seedMovies.js","components/common/searchBox.js","components/common/pagination.js","components/common/listGroup.js","components/common/like.js","components/common/tableHeader.js","components/common/tableBody.js","components/common/table.js","components/moviesTable.js","components/movies.js","utils/paginate.js","components/rentals.js","components/customers.js","components/common/input.js","components/common/select.js","components/common/form.js","components/movieForm.js","components/loginForm.js","services/authService.js","components/registerForm.js","services/userService.js","components/notFound.js","components/logout.js","components/profile.js","App.js","serviceWorker.js","index.js"],"names":["reducer","actions","initialState","localStorageName","Context","React","createContext","Provider","children","useReducer","state","dispatch","useEffect","localStorage","setItem","JSON","stringify","boundedActions","Object","keys","reduce","result","key","value","allMovies","genres","_id","name","selectedGenre","currentPage","sortColumn","path","order","query","createDataContext","action","type","payload","filter","m","map","liked","loadData","removeMovie","movie","toggleMovieLike","selectPage","page","selectGenre","genre","updateSortColumn","updateQuery","setAllMovies","parse","window","getItem","init","Sentry","dsn","log","error","console","setHttpJwt","jwt","axios","defaults","headers","common","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","user","jwtDecode","setJwt","logout","savedData","loadStorage","ProtectedRoute","Component","component","render","rest","authState","useContext","AuthContext","props","to","pathname","from","location","NavBar","className","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","getGenres","http","movieUrl","getMovies","deleteMovie","movieId","getMovie","saveMovie","body","data","movies","title","numberInStock","dailyRentalRate","SearchBox","onSearch","onChange","e","currentTarget","placeholder","Pagination","itemsCount","pageSize","onPageChange","numOfPages","Math","ceil","isMultiPages","pages","_","range","isFirstPage","isLastPage","onClick","ListGroup","items","selectedItem","onItemSelect","valueProperty","textProperty","item","style","cursor","Like","fontSize","TableHeader","columns","onSort","renderHeaderCell","column","raiseSort","label","renderSortIcon","TableBody","createKey","content","renderCell","Table","MoviesTable","onLike","onDelete","admin_columns","isAdmin","Movies","history","MoviesContext","loadDataFunc","useRef","a","genresData","moviesData","current","loadMovies","count","handleDelete","moviesClone","cloneDeep","resetData","all","g","seedData","genreData","genreId","push","filtered","toLowerCase","includes","slice","paginate","orderBy","totalCount","length","getPagedData","marginBottom","Rentals","Customers","Input","autoFocus","htmlFor","Select","dataSet","option","Form","schema","submitAction","inputList","setData","setErrors","errors","buttonLabel","handleChange","errObj","errorMessage","validateProperty","Joi","object","validate","details","message","validateAll","abortEarly","renderInput","onSubmit","preventDefault","input","disabled","string","required","number","integer","min","max","MovieForm","match","params","useState","setMovie","setGenres","mapToViewModel","movieFromDb","replace","loadGenres","loadMovie","email","minDomainSegments","tlds","allow","password","LoginForm","credentials","setCredentials","RegisterForm","newUser","setNewUser","NotFound","Logout","logoutFunc","Profile","App","role","hello","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.256dae1d.chunk.js","sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\n\r\nexport default (reducer, actions, initialState, localStorageName = '') => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n      if (localStorageName) localStorage.setItem(localStorageName, JSON.stringify(state));\r\n    }, [state]);\r\n\r\n    const boundedActions = Object.keys(actions).reduce((result, key) => {\r\n      return { ...result, [key]: actions[key](dispatch) };\r\n    }, {});\r\n\r\n    return <Context.Provider value={{ state, ...boundedActions }}>{children}</Context.Provider>;\r\n  };\r\n\r\n  return { Context, Provider };\r\n};\r\n","import createDataContext from './createDataContext';\r\n\r\nconst initialState = {\r\n  allMovies: [],\r\n  genres: [{ _id: '', name: 'All Genres' }],\r\n  selectedGenre: null,\r\n  currentPage: 1,\r\n  sortColumn: { path: 'title', order: 'asc' },\r\n  query: ''\r\n};\r\n\r\nconst moviesReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'load_data':\r\n      return {\r\n        ...initialState,\r\n        genres: [...initialState.genres, ...payload.genres],\r\n        allMovies: payload.allMovies,\r\n        selectedGenre: initialState.genres[0]\r\n      };\r\n    case 'remove_movie':\r\n      return { ...state, allMovies: state.allMovies.filter(m => m._id !== payload._id) };\r\n\r\n    case 'toggle_movie_like':\r\n      return {\r\n        ...state,\r\n        allMovies: state.allMovies.map(m => (m._id === payload._id ? { ...m, liked: !m.liked } : m))\r\n      };\r\n\r\n    case 'select_page':\r\n      return { ...state, currentPage: payload };\r\n\r\n    case 'select_genre':\r\n      return { ...state, selectedGenre: payload, currentPage: 1, query: '' };\r\n\r\n    case 'update_sort_column':\r\n      return { ...state, sortColumn: payload };\r\n\r\n    case 'set_all_movies':\r\n      return { ...state, allMovies: payload };\r\n\r\n    case 'update_query':\r\n      return { ...state, query: payload, selectedGenre: initialState.genres[0], currentPage: 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loadData = dispatch => (allMovies, genres) =>\r\n  dispatch({ type: 'load_data', payload: { allMovies, genres } });\r\n\r\nconst removeMovie = dispatch => movie => dispatch({ type: 'remove_movie', payload: movie });\r\n\r\nconst toggleMovieLike = dispatch => movie =>\r\n  dispatch({ type: 'toggle_movie_like', payload: movie });\r\n\r\nconst selectPage = dispatch => page => dispatch({ type: 'select_page', payload: page });\r\n\r\nconst selectGenre = dispatch => genre => dispatch({ type: 'select_genre', payload: genre });\r\n\r\nconst updateSortColumn = dispatch => sortColumn =>\r\n  dispatch({ type: 'update_sort_column', payload: sortColumn });\r\n\r\nconst updateQuery = dispatch => query => dispatch({ type: 'update_query', payload: query });\r\n\r\nconst setAllMovies = dispatch => allMovies =>\r\n  dispatch({ type: 'set_all_movies', payload: allMovies });\r\n\r\nconst loadStorage = () => {\r\n  const savedData = JSON.parse(window.localStorage.getItem('movies'));\r\n  return savedData || initialState;\r\n};\r\n\r\nexport const { Context, Provider } = createDataContext(\r\n  moviesReducer,\r\n  {\r\n    loadData,\r\n    removeMovie,\r\n    toggleMovieLike,\r\n    selectPage,\r\n    selectGenre,\r\n    updateSortColumn,\r\n    updateQuery,\r\n    setAllMovies\r\n  },\r\n  loadStorage(),\r\n  'movies'\r\n);\r\n","import * as Sentry from '@sentry/browser';\r\n\r\nfunction init() {\r\n  Sentry.init({ dsn: 'https://d0ceff7dfcd24286a59cda79d91f4752@sentry.io/5186000' });\r\n}\r\n\r\nfunction log(error) {\r\n  Sentry.captureException(error);\r\n  console.error(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import axios from 'axios';\r\nimport logger from './logService';\r\nimport { toast } from 'react-toastify';\r\nimport config from '../config.json';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || config.apiEndPoint;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error('An unexpected error occurrred.');\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport function setHttpJwt(jwt) {\r\n  axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete\r\n};\r\n","import createDataContext from './createDataContext';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { setHttpJwt } from '../services/httpService';\r\n\r\nconst initialState = { jwt: '' };\r\n\r\nconst authReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'set_jwt':\r\n      setHttpJwt(payload);\r\n      return { jwt: payload, user: jwtDecode(payload) };\r\n    case 'logout':\r\n      setHttpJwt('');\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setJwt = dispatch => jwt => dispatch({ type: 'set_jwt', payload: jwt });\r\n\r\nconst logout = dispatch => () => dispatch({ type: 'logout' });\r\n\r\nconst loadStorage = () => {\r\n  const savedData = JSON.parse(window.localStorage.getItem('token'));\r\n  savedData && setHttpJwt(savedData.jwt);\r\n  return savedData || initialState;\r\n};\r\n\r\nexport const { Context, Provider } = createDataContext(\r\n  authReducer,\r\n  {\r\n    setJwt,\r\n    logout\r\n  },\r\n  loadStorage(),\r\n  'token'\r\n);\r\n","import React, { useContext } from 'react';\r\nimport { Context as AuthContext } from '../../context/AuthContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  const { state: authState } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!authState.user)\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useContext } from 'react';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst NavBar = () => {\n  const { state: authState } = useContext(AuthContext);\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link to=\"/\" className=\"navbar-brand\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <div className=\"navbar-nav\">\n          <NavLink to=\"/movies\" className=\"nav-link\">\n            Movies\n          </NavLink>\n          <NavLink to=\"/customers\" className=\"nav-link\">\n            Customers\n          </NavLink>\n          <NavLink to=\"/rentals\" className=\"nav-link\">\n            Rentals\n          </NavLink>\n          {!authState.user && (\n            <>\n              <NavLink to=\"/login\" className=\"nav-link\">\n                Login\n              </NavLink>\n              <NavLink to=\"/register\" className=\"nav-link\">\n                Register\n              </NavLink>\n            </>\n          )}\n          {authState.user && (\n            <>\n              <NavLink to=\"/profile\" className=\"nav-link\">\n                {authState.user.name}\n              </NavLink>\n              <NavLink to=\"/logout\" className=\"nav-link\">\n                Logout\n              </NavLink>\n            </>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import http from './httpService';\r\n\r\nconst apiEndpoint = '/genres';\r\n\r\nexport function getGenres() {\r\n  return http.get(apiEndpoint);\r\n}\r\n","import http from './httpService';\r\n\r\nconst apiEndpoint = '/movies';\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n  console.log(movie);\r\n  return http.post(apiEndpoint, movie);\r\n}\r\n","const data = [\r\n  {\r\n    name: 'Comedy',\r\n    movies: [\r\n      { title: 'Airplane', numberInStock: 5, dailyRentalRate: 2 },\r\n      { title: 'The Hangover', numberInStock: 10, dailyRentalRate: 2 },\r\n      { title: 'Wedding Crashers', numberInStock: 15, dailyRentalRate: 2 }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Action',\r\n    movies: [\r\n      { title: 'Die Hard', numberInStock: 5, dailyRentalRate: 2 },\r\n      { title: 'Terminator', numberInStock: 10, dailyRentalRate: 2 },\r\n      { title: 'The Avengers', numberInStock: 15, dailyRentalRate: 2 }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Romance',\r\n    movies: [\r\n      { title: 'The Notebook', numberInStock: 5, dailyRentalRate: 2 },\r\n      { title: 'When Harry Met Sally', numberInStock: 10, dailyRentalRate: 2 },\r\n      { title: 'Pretty Woman', numberInStock: 15, dailyRentalRate: 2 }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Thriller',\r\n    movies: [\r\n      { title: 'The Sixth Sense', numberInStock: 5, dailyRentalRate: 2 },\r\n      { title: 'Gone Girl', numberInStock: 10, dailyRentalRate: 2 },\r\n      { title: 'The Others', numberInStock: 15, dailyRentalRate: 2 }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default data;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ query, onSearch }) => {\r\n  return <input type='text' className='form-control my-3' value={query} onChange={e => onSearch(e.currentTarget.value)} placeholder='Search...' />;\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\nimport _ from 'lodash';\n\nconst Pagination = ({ currentPage, itemsCount, pageSize, onPageChange }) => {\n  const numOfPages = Math.ceil(itemsCount / pageSize);\n\n  const isMultiPages = numOfPages > 1;\n\n  const pages = _.range(1, numOfPages + 1);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === numOfPages;\n\n  if (!isMultiPages) return null;\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination\">\n        {isMultiPages && (\n          <li className={`page-item ${isFirstPage && 'disabled'}`}>\n            <span className=\"page-link\" onClick={() => onPageChange(1)}>\n              First\n            </span>\n          </li>\n        )}\n\n        {pages.map(page => (\n          <li key={page} className={`page-item  ${page === currentPage && 'active'}`}>\n            <span className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </span>\n          </li>\n        ))}\n\n        {isMultiPages && (\n          <li className={`page-item ${isLastPage && 'disabled'}`}>\n            <span className=\"page-link\" onClick={() => onPageChange(numOfPages)}>\n              Last\n            </span>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\n\nconst ListGroup = ({\n  items,\n  selectedItem,\n  onItemSelect,\n  valueProperty = '_id',\n  textProperty = 'name'\n}) => {\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li\n          key={item[valueProperty]}\n          className={`list-group-item ${item === selectedItem && 'active'}`}\n          style={{ cursor: 'pointer' }}\n          onClick={() => onItemSelect(item)}\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ListGroup;\n","import React from 'react';\n\nconst Like = ({ liked, onClick }) => {\n  return (\n    <i\n      onClick={onClick}\n      className={`fa ${liked ? 'fa-heart' : 'fa-heart-o'}`}\n      style={{ fontSize: 24, cursor: 'pointer' }}\n    ></i>\n  );\n};\n\nexport default Like;\n","import React from 'react';\n\nconst TableHeader = ({ columns, sortColumn, onSort }) => {\n  const raiseSort = path => {\n    const order = path === sortColumn.path && sortColumn.order === 'asc' ? 'desc' : 'asc';\n    onSort({ path, order });\n  };\n\n  const renderSortIcon = column => {\n    const { path, order } = sortColumn;\n    if (column.path !== path) return null;\n    return <i className={`fa fa-sort-${order}`}></i>;\n  };\n\n  const renderHeaderCell = column => {\n    if (column.path)\n      return (\n        <th key={column.path} onClick={() => raiseSort(column.path)} className={'clickable'}>\n          {column.label}\n          {renderSortIcon(column)}\n        </th>\n      );\n    return <th key={column.key}></th>;\n  };\n\n  return (\n    <thead>\n      <tr>{columns.map(column => renderHeaderCell(column))}</tr>\n    </thead>\n  );\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport _ from 'lodash';\n\nconst TableBody = ({ data, columns }) => {\n  const renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n\n  const createKey = (item, column) => item._id + (column.path || column.key);\n\n  return (\n    <tbody>\n      {data.map(item => (\n        <tr key={item._id}>\n          {columns.map(column => (\n            <td key={createKey(item, column)}>{renderCell(item, column)}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n};\n\nexport default TableBody;\n","import React from 'react';\nimport TableHeader from './tableHeader';\nimport TableBody from './tableBody';\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody data={data} columns={columns} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Context as AuthContext } from '../context/AuthContext';\r\nimport Like from './common/like';\r\nimport Table from './common/table';\r\n\r\nconst MoviesTable = ({ movies, onLike, onDelete, onSort, sortColumn }) => {\r\n  let columns = [\r\n    {\r\n      path: 'title',\r\n      label: 'Title',\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: 'genre.name', label: 'Genre' },\r\n    { path: 'numberInStock', label: 'Stock' },\r\n    { path: 'dailyRentalRate', label: 'Rate' },\r\n    {\r\n      key: 'like',\r\n      content: movie => <Like liked={movie.liked} onClick={() => onLike(movie)} />\r\n    }\r\n  ];\r\n\r\n  const admin_columns = [\r\n    {\r\n      key: 'delete',\r\n      content: movie => (\r\n        <button onClick={() => onDelete(movie)} className=\"btn btn-danger btn-sm\">\r\n          Delete\r\n        </button>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const { state: authState } = useContext(AuthContext);\r\n\r\n  if (authState.user && authState.user.isAdmin) columns = [...columns, ...admin_columns];\r\n\r\n  return <Table data={movies} onSort={onSort} sortColumn={sortColumn} columns={columns} />;\r\n};\r\n\r\nexport default MoviesTable;\r\n","import React, { useEffect, useContext, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport _ from 'lodash';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { getGenres } from '../services/genreService';\r\nimport { getMovies, deleteMovie, saveMovie } from '../services/movieService';\r\nimport seedData from '../seedData/seedMovies';\r\nimport { paginate } from '../utils/paginate';\r\n\r\nimport { Context as MoviesContext } from '../context/MoviesContext';\r\nimport { Context as AuthContext } from '../context/AuthContext';\r\n\r\nimport SearchBox from './common/searchBox';\r\nimport Pagination from './common/pagination';\r\nimport ListGroup from './common/listGroup';\r\nimport MoviesTable from './moviesTable';\r\n\r\nconst Movies = ({ history }) => {\r\n  const MAX_PAGE_SIZE = 4;\r\n\r\n  const {\r\n    loadData,\r\n    removeMovie,\r\n    toggleMovieLike,\r\n    selectPage,\r\n    selectGenre,\r\n    updateSortColumn,\r\n    updateQuery,\r\n    setAllMovies,\r\n    state\r\n  } = useContext(MoviesContext);\r\n\r\n  const { state: authState } = useContext(AuthContext);\r\n\r\n  const loadDataFunc = useRef(loadData);\r\n\r\n  useEffect(() => {\r\n    async function loadMovies() {\r\n      const { data: genresData } = await getGenres();\r\n      const { data: moviesData } = await getMovies();\r\n      loadDataFunc.current(moviesData, genresData);\r\n    }\r\n    loadMovies();\r\n  }, []);\r\n\r\n  const { allMovies, genres, selectedGenre, currentPage, sortColumn, query } = state;\r\n\r\n  if (allMovies.count === 0) return <p> There are no movies in the database.</p>;\r\n\r\n  const handleDelete = async movie => {\r\n    const moviesClone = _.cloneDeep(state.allMovies);\r\n    try {\r\n      removeMovie(movie);\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) toast.error('This movie has already been deleted.');\r\n\r\n      setAllMovies(moviesClone);\r\n    }\r\n  };\r\n\r\n  const handleLike = movie => {\r\n    toggleMovieLike(movie);\r\n  };\r\n\r\n  const handlePageChange = page => selectPage(page);\r\n\r\n  const handleGenreSelect = genre => selectGenre(genre);\r\n\r\n  const handleSort = sortColumn => updateSortColumn(sortColumn);\r\n\r\n  const handleSearch = query => updateQuery(query);\r\n\r\n  const resetData = async () => {\r\n    await Promise.all(allMovies.map(m => deleteMovie(m._id)));\r\n    genres.map(g =>\r\n      seedData.map(async genreData =>\r\n        genreData.name === g.name\r\n          ? await Promise.all(genreData.movies.map(m => saveMovie({ ...m, genreId: g._id })))\r\n          : null\r\n      )\r\n    );\r\n    history.push('/');\r\n  };\r\n\r\n  const getPagedData = () => {\r\n    let filtered;\r\n    if (query) {\r\n      filtered = allMovies.filter(\r\n        m => m.title.toLowerCase().includes(query) || m.genre.name.toLowerCase().includes(query)\r\n      );\r\n    } else {\r\n      filtered =\r\n        selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\r\n    }\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, MAX_PAGE_SIZE);\r\n\r\n    return { totalCount: filtered.length, movies };\r\n  };\r\n\r\n  const { totalCount, movies } = getPagedData();\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-3\">\r\n        <ListGroup items={genres} selectedItem={selectedGenre} onItemSelect={handleGenreSelect} />\r\n      </div>\r\n      <div className=\"col\">\r\n        {authState.user && (\r\n          <Link to=\"/movies/new\" className=\"btn btn-primary\" style={{ marginBottom: 20 }}>\r\n            New Movie\r\n          </Link>\r\n        )}\r\n        <button onClick={resetData} className=\"btn btn-success ml-3\" style={{ marginBottom: 20 }}>\r\n          Reset Data\r\n        </button>\r\n\r\n        <p>Displaying {totalCount} movies in the database...</p>\r\n        <SearchBox query={query} onSearch={handleSearch} />\r\n        <MoviesTable\r\n          movies={movies}\r\n          onLike={handleLike}\r\n          onDelete={handleDelete}\r\n          sortColumn={sortColumn}\r\n          onSort={handleSort}\r\n        />\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          itemsCount={totalCount}\r\n          pageSize={MAX_PAGE_SIZE}\r\n          onPageChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","export const paginate = (data, currentPage, pageSize) =>\n  data.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n","import React from 'react';\n\nconst Rentals = () => {\n  return (\n    <div>\n      <h1>Rentals</h1>\n      <p>Demo Content to display Routing</p>\n    </div>\n  );\n};\n\nexport default Rentals;\n","import React from 'react';\n\nconst Customers = () => {\n  return (\n    <div>\n      <h1>Customers</h1>\n      <p>Demo Content to display Routing</p>\n    </div>\n  );\n};\n\nexport default Customers;\n","import React from 'react';\n\nconst Input = ({  autoFocus = false, type=\"text\", name , label, error, ...rest}) => {\n  return (\n    <div className='form-group'>\n      <label htmlFor={name}>{label}</label>\n      <input\n        name={name}\n        {...rest}\n        type={type}\n        autoFocus={autoFocus}\n        id={name}\n        className='form-control'\n      />\n      {error && <div className='alert alert-danger'>{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\r\n\r\nconst Select = ({ name, value, dataSet, onChange }) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>Example select</label>\r\n      <select className='form-control' id={{ name }} name={name} value={value} onChange={onChange}>\r\n        <option value=''>Please Select</option>\r\n        {dataSet.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from 'react';\nimport Joi from '@hapi/joi';\nimport Input from './input';\nimport Select from './select';\n\nconst Form = ({ schema, submitAction, inputList, data, setData, setErrors, errors, buttonLabel }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errObj = validateAll();\n    if (errObj) return setErrors(errObj);\n    setErrors({});\n    submitAction();\n  };\n\n  const handleChange = ({ currentTarget: { name, value } }) => {\n    const errObj = { ...errors };\n    const errorMessage = validateProperty({ name, value });\n    if (errorMessage) errObj[name] = errorMessage;\n    else delete errObj[name];\n\n    setData({ ...data, [name]: value });\n    setErrors(errObj);\n  };\n\n  const validateProperty = ({ name, value }) => {\n    const { error } = Joi.object({ [name]: schema[name] }).validate({ [name]: value });\n    return error ? error.details[0].message : null;\n  };\n\n  const validateAll = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.object(schema).validate(data, options);\n    if (!error) return null;\n\n    let errObj = {};\n    error.details.map(item => (errObj[item.path[0]] = item.message));\n    return errObj;\n  };\n\n  const renderInput = ({ name, label, type = 'text', autoFocus, dataSet }) => {\n    switch (type) {\n      case 'number':\n      case 'password':\n      case 'text':\n        return (\n          <Input\n            key={name}\n            name={name}\n            label={label}\n            value={data[name]}\n            type={type}\n            onChange={handleChange}\n            error={errors[name]}\n            autoFocus={autoFocus}\n          />\n        );\n      case 'select':\n        return (\n          <Select\n            name={name}\n            value={data[name]}\n            key={name}\n            dataSet={dataSet}\n            onChange={handleChange}\n            error={errors[name]}\n          />\n        );\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {inputList.map(input => renderInput(input))}\n      <button className=\"btn btn-primary\" disabled={validateAll()}>\n        {buttonLabel}\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useState, useEffect } from 'react';\r\nimport Joi from '@hapi/joi';\r\nimport { getMovie, saveMovie } from '../services/movieService';\r\nimport { getGenres } from '../services/genreService';\r\n\r\nimport Form from './common/form';\r\n\r\nconst schema = {\r\n  _id: Joi.string(),\r\n  title: Joi.string()\r\n    .required()\r\n    .label('Title'),\r\n  genreId: Joi.string()\r\n    .required()\r\n    .label('Genre'),\r\n  numberInStock: Joi.number()\r\n    .integer()\r\n    .required()\r\n    .min(0)\r\n    .max(100)\r\n    .label('Number In Stock'),\r\n  dailyRentalRate: Joi.number()\r\n    .required()\r\n    .min(0)\r\n    .max(100)\r\n    .label('Daily Dental Rate')\r\n};\r\n\r\nconst MovieForm = ({ match, history }) => {\r\n  const { movieId } = match.params;\r\n\r\n  const [movie, setMovie] = useState({\r\n    title: '',\r\n    genreId: '',\r\n    numberInStock: '',\r\n    dailyRentalRate: ''\r\n  });\r\n\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const mapToViewModel = movie => ({\r\n    _id: movie._id,\r\n    title: movie.title,\r\n    genreId: movie.genre._id,\r\n    numberInStock: movie.numberInStock,\r\n    dailyRentalRate: movie.dailyRentalRate\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function loadGenres() {\r\n      const { data: genresData } = await getGenres();\r\n      setGenres(genresData);\r\n    }\r\n    async function loadMovie() {\r\n      try {\r\n        if (movieId === 'new') return;\r\n        const { data: movieFromDb } = await getMovie(movieId);\r\n        setMovie(mapToViewModel(movieFromDb));\r\n      } catch (ex) {\r\n        if (ex.response && ex.response.status === 404) return history.replace('/not-found');\r\n      }\r\n    }\r\n\r\n    loadGenres();\r\n    loadMovie();\r\n  }, [movieId, history]);\r\n\r\n  const submitAction = () => {\r\n    saveMovie(movie);\r\n    history.push('/movies');\r\n  };\r\n\r\n  const inputList = [\r\n    { name: 'title', label: 'Title', autoFocus: true },\r\n    { name: 'genreId', label: 'Genre', type: 'select', dataSet: genres },\r\n    { name: 'numberInStock', label: 'Number In Stock', type: 'number' },\r\n    { name: 'dailyRentalRate', label: 'Daily Rental Rate', type: 'number' }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h1>Movie Form</h1>\r\n      <Form\r\n        inputList={inputList}\r\n        schema={schema}\r\n        submitAction={submitAction}\r\n        data={movie}\r\n        setData={setMovie}\r\n        errors={errors}\r\n        setErrors={setErrors}\r\n        buttonLabel=\"Save\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieForm;\r\n","import React, { useState, useContext } from 'react';\r\nimport Joi from '@hapi/joi';\r\n\r\nimport { Context as AuthContext } from '../context/AuthContext';\r\nimport { login } from '../services/authService';\r\nimport Form from './common/form';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst schema = {\r\n  email: Joi.string()\r\n    .required()\r\n    .email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } })\r\n    .label('Email'),\r\n  password: Joi.string()\r\n    .min(5)\r\n    .required()\r\n    .label('Password')\r\n};\r\n\r\nconst LoginForm = ({ history, location }) => {\r\n  const [credentials, setCredentials] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { setJwt, state: authState } = useContext(AuthContext);\r\n\r\n  const submitAction = async () => {\r\n    try {\r\n      const { data: jwt } = await login(credentials.email, credentials.password);\r\n      setJwt(jwt);\r\n      // Redirect Back if State Exist in Location\r\n      location.state ? history.push(location.state.from.pathname) : history.push('/');\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        setErrors({ email: ex.response.data });\r\n      }\r\n    }\r\n  };\r\n\r\n  const inputList = [\r\n    { name: 'email', label: 'Email', autoFocus: true },\r\n    { name: 'password', label: 'Password', type: 'password' }\r\n  ];\r\n\r\n  if (authState.user) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <Form\r\n        inputList={inputList}\r\n        schema={schema}\r\n        submitAction={submitAction}\r\n        data={credentials}\r\n        setData={setCredentials}\r\n        errors={errors}\r\n        setErrors={setErrors}\r\n        buttonLabel=\"Login\"\r\n      />\r\n      <hr />\r\n      <p>Demo mode</p>\r\n      <p>Admin Account: admin@admin.com</p>\r\n      <p>Admin Password: 123456</p>\r\n      <hr />\r\n      <p>Normal Account: user@user.com</p>\r\n      <p>Normal Password: 123456</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import http from './httpService';\r\n\r\nconst apiEndpoint = '/auth';\r\n\r\nexport function login(email, password) {\r\n  return http.post(apiEndpoint, { email, password });\r\n}\r\n","import React, { useState, useContext } from 'react';\nimport Joi from '@hapi/joi';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport { register } from '../services/userService';\nimport Form from './common/form';\n\nconst schema = {\n  email: Joi.string()\n    .required()\n    .email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } })\n    .label('Email'),\n  password: Joi.string()\n    .required()\n    .min(5)\n    .label('Password'),\n  name: Joi.string()\n    .required()\n    .label('Name')\n};\n\nconst RegisterForm = ({ history }) => {\n  const [newUser, setNewUser] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const { setJwt } = useContext(AuthContext);\n\n  const submitAction = async () => {\n    try {\n      const response = await register(newUser);\n      console.log(response);\n      setJwt(response.headers['x-auth-token']);\n      history.push('/');\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        setErrors({ email: ex.response.data });\n      }\n    }\n  };\n\n  const inputList = [\n    { name: 'email', label: 'Email', autoFocus: true },\n    { name: 'password', label: 'Password', type: 'password' },\n    { name: 'name', label: 'Name' }\n  ];\n\n  return (\n    <div>\n      <h1>Register</h1>\n      <Form\n        inputList={inputList}\n        schema={schema}\n        submitAction={submitAction}\n        data={newUser}\n        setData={setNewUser}\n        errors={errors}\n        setErrors={setErrors}\n        buttonLabel=\"Register\"\n      />\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import http from './httpService';\r\n\r\nconst apiEndpoint = '/users';\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, user);\r\n}\r\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>Not Found</h1>\n      <p>Oopppppsss this page doesn't exist!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { useContext, useEffect, useRef } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Context as AuthContext } from '../context/AuthContext';\r\n\r\nconst Logout = () => {\r\n  const { logout } = useContext(AuthContext);\r\n\r\n  const logoutFunc = useRef(logout);\r\n\r\n  useEffect(() => {\r\n    logoutFunc.current();\r\n  }, []);\r\n\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default Logout;\r\n","import React from 'react';\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div>\r\n      <h1>Profile Page</h1>\r\n      <p>Sample Profile Page</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport { Provider as MoviesProvider } from './context/MoviesContext';\nimport { Provider as AuthProvider } from './context/AuthContext';\n\nimport ProtectedRoute from './components/common/protectedRoute';\n\nimport NavBar from './components/navBar';\nimport Movies from './components/movies';\nimport Rentals from './components/rentals';\nimport Customers from './components/customers';\nimport MovieForm from './components/movieForm';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport NotFound from './components/notFound';\nimport Logout from './components/logout';\nimport Profile from './components/profile';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <MoviesProvider>\n        <ToastContainer />\n        <NavBar />\n\n        <main role=\"main\" className=\"container\">\n          <Switch>\n            <ProtectedRoute path=\"/movies/:movieId\" render={(props) => <MovieForm {...props} hello=\"hello\" />} />\n            <Route path=\"/movies\" render={(props) => <Movies {...props} />} />\n            <Route path=\"/login\" render={(props) => <LoginForm {...props} />} />\n            <Route path=\"/register\" render={(props) => <RegisterForm {...props} />} />\n            <Route path=\"/rentals\" render={() => <Rentals />} />\n            <Route path=\"/customers\" render={() => <Customers />} />\n            <Route path=\"/profile\" render={() => <Profile />} />\n            <Route path=\"/logout\" render={() => <Logout />} />\n            <Route path=\"/not-found\" render={NotFound} />\n            <Redirect exact from=\"/react-vidly\" to=\"/movies\" />\n            <Redirect exact from=\"/\" to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </MoviesProvider>\n    </AuthProvider>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport logger from './services/logService';\n\nlogger.init();\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}